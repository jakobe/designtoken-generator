@use 'sass:math';
@use 'sass:map';

$-include-rgb: false;
$-include-contrast: false;

@mixin configure($include-rgb: null, $include-contrast: null) {
	@if $include-rgb != null {
		$-include-rgb: $include-rgb !global;
	}
	@if $include-contrast != null {
		$-include-contrast: $include-contrast !global;
	}
}

@function _get-color-contrast($color, $contrast-dark, $contrast-light) {
	$color-brightness: _get-color-brightness($color);
	@if $color-brightness == 'dark' {
		@return $contrast-light;
	} @else {
		@return $contrast-dark;
	}
}

@function _get-color-brightness($color) {
	// Formula: https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ
	// Background: https://www.w3.org/TR/AERT/#color-contrast
	$red: red($color);
	$green: green($color);
	$blue: blue($color);
	/*
        Color brightness is determined by the following formula:
        ((Red value X 299) + (Green value X 587) + (Blue value X 114)) / 1000
      */
	$color-brightness: math.div(
		($red * 299) + ($green * 587) + ($blue * 114),
		1000
	);
	/* The range for color brightness difference is 125 */
	$color-range: 128;

	@if $color-brightness == 255 {
		@return 'white';
	} @else if $color-brightness >= $color-range {
		@return 'light';
	} @else {
		@return 'dark';
	}
}

@function _get-tint-value($color, $weight: 10) {
	@return mix(white, $color, $weight);
}

@function _get-shade-value($color, $weight: 12) {
	@return mix(black, $color, $weight);
}

@function _get-rgb-values($color) {
	@return red($color), green($color), blue($color);
}

@function generate-color-variations(
	$color-map-input,
	$contrast-dark: #000,
	$contrast-light: #fff,
	$include-contrast: $-include-contrast,
	$include-rgb: $-include-rgb
) {
	$color-map-output: ();
	@each $color-name, $color-value in $color-map-input {
		$color-map-output: map.merge(
			$color-map-output,
			(
				$color-name: $color-value,
				#{$color-name}-rgb: _get-rgb-values($color-value),
				#{$color-name}-contrast:
					_get-color-contrast($color-value, $contrast-dark, $contrast-light),
				#{$color-name}-shade: _get-shade-value($color-value),
				#{$color-name}-tint: _get-tint-value($color-value),
				#{$color-name}-color-brightness: _get-color-brightness($color-value),
			)
		);
		@if not $include-contrast {
			$color-map-output: map.remove($color-map-output, #{$color-name}-contrast);
		}
		@if not $include-rgb {
			$color-map-output: map.remove($color-map-output, #{$color-name}-rgb);
		}
	}
	@return $color-map-output;
}
